## .github/workflows/python-tests.yml
#name: Python Tests
#
#on:
#  push:
#    branches:
#      - master
#  pull_request:
#    branches:
#      - master
#
#jobs:
#  test:
#    runs-on: ubuntu-latest
#
#    strategy:
#      matrix:
#        python-version: [3.11]
#        browser: [chrome, firefox]  # Define matrix for both browsers
#
#    steps:
#      - name: Check out code
#        uses: actions/checkout@v3
#
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#
#      - name: Install Firefox and Geckodriver
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y firefox dbus-x11 libgtk-3-0 libasound2
#          sudo apt-get install -y xvfb dbus-x11 libgtk-3-0 libdbus-glib-1-2 libxt6 libxcomposite1 libasound2
#          GECKODRIVER_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | grep "tag_name" | cut -d '"' -f 4)
#          wget "https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz"
#          tar -xzf geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz
#          sudo mv geckodriver /usr/local/bin/
#          rm geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz
#
#      - name: Run tests
#        run: |
#          pytest --cmdopt=${{ matrix.browser }}  # Use the browser from the matrix
name: Python Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.11]
        browser: [chrome, firefox]  # Define matrix for both browsers

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Install Firefox and Geckodriver if testing with Firefox
      - name: Install Firefox and Geckodriver
        if: matrix.browser == 'firefox'  # Only install if the browser is Firefox
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox dbus-x11 libgtk-3-0 libasound2
          sudo apt-get install -y xvfb libdbus-glib-1-2 libxt6 libxcomposite1
          GECKODRIVER_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | grep "tag_name" | cut -d '"' -f 4)
          wget "https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz"
          tar -xzf geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/
          rm geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz

      # Install Chrome and Chromedriver if testing with Chrome
      - name: Install Chrome and Chromedriver
        if: matrix.browser == 'chrome'  # Only install if the browser is Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          sudo apt-get install -y xvfb
          CHROMEDRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget -N https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          chmod +x chromedriver
          sudo mv chromedriver /usr/local/bin/

      # Run tests with Chrome if matrix.browser is chrome
      - name: Run tests with Chrome
        if: matrix.browser == 'chrome'
        run: |
          xvfb-run --auto-servernum pytest --cmdopt=${{ matrix.browser }} -v

      # Run tests with Firefox if matrix.browser is firefox
      - name: Run tests with Firefox
        if: matrix.browser == 'firefox'
        run: |
          xvfb-run --auto-servernum pytest --cmdopt=${{ matrix.browser }} -v
